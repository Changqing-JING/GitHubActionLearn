name: CMake

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Linux deps
        if: runner.os == 'Linux'

        run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make -j $(nproc) && sudo cp ./lib/*.a /usr/lib
      - name: Install macos deps
        if: runner.os == 'macOS'
        run: brew install googletest

      - name: Install windows deps
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/google/googletest.git 
          cd googletest
          mkdir build_win
          cd build_win
          cmake -G "Visual Studio 17 2022" -DCMAKE_INSTALL_PREFIX=D:\Gtest_x86 -Dgtest_force_shared_crt=ON  -A x64 ..
          cmake --build . --config Debug
          cmake --install . --config Debug

      - uses: actions/checkout@v3
      - name: Configure CMake on Unix
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DENABLE_TEST=1

      - name: Configure CMake on Windows
        if: runner.os == 'Windows'
        run: |
          set GTest_ROOT=D:\Gtest_x86 && cmake -B ${{github.workspace}}/build -G "Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=Debug -DENABLE_TEST=1

      - name: Build on Unix
        working-directory: ${{github.workspace}}/build
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: cmake --build . --parallel

      - name: Build on Windows
        working-directory: ${{github.workspace}}/build
        if: runner.os == 'Windows'
        run: cmake --build . --config Debug

      - name: Test on Unix
        working-directory: ${{github.workspace}}/build
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: ctest --verbose

      - name: Test on Windows
        working-directory: ${{github.workspace}}/build
        if: runner.os == 'Windows'
        run: ctest --verbose -C Debug
